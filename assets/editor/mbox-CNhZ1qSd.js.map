{"version":3,"file":"mbox-CNhZ1qSd.js","sources":["../node_modules/@codemirror/legacy-modes/mode/mbox.js"],"sourcesContent":["var rfc2822 = [\n  \"From\", \"Sender\", \"Reply-To\", \"To\", \"Cc\", \"Bcc\", \"Message-ID\",\n  \"In-Reply-To\", \"References\", \"Resent-From\", \"Resent-Sender\", \"Resent-To\",\n  \"Resent-Cc\", \"Resent-Bcc\", \"Resent-Message-ID\", \"Return-Path\", \"Received\"\n];\nvar rfc2822NoEmail = [\n  \"Date\", \"Subject\", \"Comments\", \"Keywords\", \"Resent-Date\"\n];\n\nvar whitespace = /^[ \\t]/;\nvar separator = /^From /; // See RFC 4155\nvar rfc2822Header = new RegExp(\"^(\" + rfc2822.join(\"|\") + \"): \");\nvar rfc2822HeaderNoEmail = new RegExp(\"^(\" + rfc2822NoEmail.join(\"|\") + \"): \");\nvar header = /^[^:]+:/; // Optional fields defined in RFC 2822\nvar email = /^[^ ]+@[^ ]+/;\nvar untilEmail = /^.*?(?=[^ ]+?@[^ ]+)/;\nvar bracketedEmail = /^<.*?>/;\nvar untilBracketedEmail = /^.*?(?=<.*>)/;\n\nfunction styleForHeader(header) {\n  if (header === \"Subject\") return \"header\";\n  return \"string\";\n}\n\nfunction readToken(stream, state) {\n  if (stream.sol()) {\n    // From last line\n    state.inSeparator = false;\n    if (state.inHeader && stream.match(whitespace)) {\n      // Header folding\n      return null;\n    } else {\n      state.inHeader = false;\n      state.header = null;\n    }\n\n    if (stream.match(separator)) {\n      state.inHeaders = true;\n      state.inSeparator = true;\n      return \"atom\";\n    }\n\n    var match;\n    var emailPermitted = false;\n    if ((match = stream.match(rfc2822HeaderNoEmail)) ||\n        (emailPermitted = true) && (match = stream.match(rfc2822Header))) {\n      state.inHeaders = true;\n      state.inHeader = true;\n      state.emailPermitted = emailPermitted;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    // Use vim's heuristics: recognize custom headers only if the line is in a\n    // block of legitimate headers.\n    if (state.inHeaders && (match = stream.match(header))) {\n      state.inHeader = true;\n      state.emailPermitted = true;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    state.inHeaders = false;\n    stream.skipToEnd();\n    return null;\n  }\n\n  if (state.inSeparator) {\n    if (stream.match(email)) return \"link\";\n    if (stream.match(untilEmail)) return \"atom\";\n    stream.skipToEnd();\n    return \"atom\";\n  }\n\n  if (state.inHeader) {\n    var style = styleForHeader(state.header);\n\n    if (state.emailPermitted) {\n      if (stream.match(bracketedEmail)) return style + \" link\";\n      if (stream.match(untilBracketedEmail)) return style;\n    }\n    stream.skipToEnd();\n    return style;\n  }\n\n  stream.skipToEnd();\n  return null;\n};\n\nexport const mbox = {\n  name: \"mbox\",\n  startState: function() {\n    return {\n      // Is in a mbox separator\n      inSeparator: false,\n      // Is in a mail header\n      inHeader: false,\n      // If bracketed email is permitted. Only applicable when inHeader\n      emailPermitted: false,\n      // Name of current header\n      header: null,\n      // Is in a region of mail headers\n      inHeaders: false\n    };\n  },\n  token: readToken,\n  blankLine: function(state) {\n    state.inHeaders = state.inSeparator = state.inHeader = false;\n  },\n  languageData: {\n    autocomplete: rfc2822.concat(rfc2822NoEmail)\n  }\n}\n\n"],"names":["rfc2822","rfc2822NoEmail","whitespace","separator","rfc2822Header","rfc2822HeaderNoEmail","header","email","untilEmail","bracketedEmail","untilBracketedEmail","styleForHeader","readToken","stream","state","match","emailPermitted","style","mbox"],"mappings":"AAAA,IAAIA,EAAU,CACZ,OAAQ,SAAU,WAAY,KAAM,KAAM,MAAO,aACjD,cAAe,aAAc,cAAe,gBAAiB,YAC7D,YAAa,aAAc,oBAAqB,cAAe,UACjE,EACIC,EAAiB,CACnB,OAAQ,UAAW,WAAY,WAAY,aAC7C,EAEIC,EAAa,SACbC,EAAY,SACZC,EAAgB,IAAI,OAAO,KAAOJ,EAAQ,KAAK,GAAG,EAAI,KAAK,EAC3DK,EAAuB,IAAI,OAAO,KAAOJ,EAAe,KAAK,GAAG,EAAI,KAAK,EACzEK,EAAS,UACTC,EAAQ,eACRC,EAAa,uBACbC,EAAiB,SACjBC,EAAsB,eAE1B,SAASC,EAAeL,EAAQ,CAC9B,OAAIA,IAAW,UAAkB,SAC1B,QACT,CAEA,SAASM,EAAUC,EAAQC,EAAO,CAChC,GAAID,EAAO,MAAO,CAGhB,GADAC,EAAM,YAAc,GAChBA,EAAM,UAAYD,EAAO,MAAMX,CAAU,EAE3C,OAAO,KAMT,GAJEY,EAAM,SAAW,GACjBA,EAAM,OAAS,KAGbD,EAAO,MAAMV,CAAS,EACxB,OAAAW,EAAM,UAAY,GAClBA,EAAM,YAAc,GACb,OAGT,IAAIC,EACAC,EAAiB,GACrB,OAAKD,EAAQF,EAAO,MAAMR,CAAoB,KACzCW,EAAiB,MAAUD,EAAQF,EAAO,MAAMT,CAAa,IAChEU,EAAM,UAAY,GAClBA,EAAM,SAAW,GACjBA,EAAM,eAAiBE,EACvBF,EAAM,OAASC,EAAM,CAAC,EACf,QAKLD,EAAM,YAAcC,EAAQF,EAAO,MAAMP,CAAM,IACjDQ,EAAM,SAAW,GACjBA,EAAM,eAAiB,GACvBA,EAAM,OAASC,EAAM,CAAC,EACf,SAGTD,EAAM,UAAY,GAClBD,EAAO,UAAS,EACT,KACR,CAED,GAAIC,EAAM,YACR,OAAID,EAAO,MAAMN,CAAK,EAAU,QAC5BM,EAAO,MAAML,CAAU,GAC3BK,EAAO,UAAS,EACT,QAGT,GAAIC,EAAM,SAAU,CAClB,IAAIG,EAAQN,EAAeG,EAAM,MAAM,EAEvC,GAAIA,EAAM,eAAgB,CACxB,GAAID,EAAO,MAAMJ,CAAc,EAAG,OAAOQ,EAAQ,QACjD,GAAIJ,EAAO,MAAMH,CAAmB,EAAG,OAAOO,CAC/C,CACD,OAAAJ,EAAO,UAAS,EACTI,CACR,CAED,OAAAJ,EAAO,UAAS,EACT,IACT,CAEY,MAACK,EAAO,CAClB,KAAM,OACN,WAAY,UAAW,CACrB,MAAO,CAEL,YAAa,GAEb,SAAU,GAEV,eAAgB,GAEhB,OAAQ,KAER,UAAW,EACjB,CACG,EACD,MAAON,EACP,UAAW,SAASE,EAAO,CACzBA,EAAM,UAAYA,EAAM,YAAcA,EAAM,SAAW,EACxD,EACD,aAAc,CACZ,aAAcd,EAAQ,OAAOC,CAAc,CAC5C,CACH","x_google_ignoreList":[0]}