{"version":3,"file":"toml-BXUEaScT.js","sources":["../node_modules/@codemirror/legacy-modes/mode/toml.js"],"sourcesContent":["export const toml = {\n  name: \"toml\",\n  startState: function () {\n    return {\n      inString: false,\n      stringType: \"\",\n      lhs: true,\n      inArray: 0\n    };\n  },\n  token: function (stream, state) {\n    //check for state changes\n    if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n      state.stringType = stream.peek();\n      stream.next(); // Skip quote\n      state.inString = true; // Update state\n    }\n    if (stream.sol() && state.inArray === 0) {\n      state.lhs = true;\n    }\n    //return state\n    if (state.inString) {\n      while (state.inString && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.inString = false; // Clear flag\n        } else if (stream.peek() === '\\\\') {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return state.lhs ? \"property\" : \"string\"; // Token style\n    } else if (state.inArray && stream.peek() === ']') {\n      stream.next();\n      state.inArray--;\n      return 'bracket';\n    } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n      stream.next();//skip closing ]\n      // array of objects has an extra open & close []\n      if (stream.peek() === ']') stream.next();\n      return \"atom\";\n    } else if (stream.peek() === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n      return \"property\";\n    } else if (state.lhs && stream.peek() === \"=\") {\n      stream.next();\n      state.lhs = false;\n      return null;\n    } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n      return 'atom'; //date\n    } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n      return 'atom';\n    } else if (!state.lhs && stream.peek() === '[') {\n      state.inArray++;\n      stream.next();\n      return 'bracket';\n    } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n      return 'number';\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  },\n  languageData: {\n    commentTokens: { line: '#' },\n  },\n};\n"],"names":["toml","stream","state","c"],"mappings":"AAAY,MAACA,EAAO,CAClB,KAAM,OACN,WAAY,UAAY,CACtB,MAAO,CACL,SAAU,GACV,WAAY,GACZ,IAAK,GACL,QAAS,CACf,CACG,EACD,MAAO,SAAUC,EAAQC,EAAO,CAW9B,GATI,CAACA,EAAM,WAAcD,EAAO,KAAI,GAAM,KAASA,EAAO,QAAU,OAClEC,EAAM,WAAaD,EAAO,OAC1BA,EAAO,KAAI,EACXC,EAAM,SAAW,IAEfD,EAAO,IAAG,GAAMC,EAAM,UAAY,IACpCA,EAAM,IAAM,IAGVA,EAAM,SAAU,CAClB,KAAOA,EAAM,UAAY,CAACD,EAAO,IAAG,GAC9BA,EAAO,SAAWC,EAAM,YAC1BD,EAAO,KAAI,EACXC,EAAM,SAAW,IACRD,EAAO,KAAM,IAAK,MAC3BA,EAAO,KAAI,EACXA,EAAO,KAAI,GAEXA,EAAO,MAAM,cAAc,EAG/B,OAAOC,EAAM,IAAM,WAAa,QACtC,KAAW,IAAIA,EAAM,SAAWD,EAAO,KAAI,IAAO,IAC5C,OAAAA,EAAO,KAAI,EACXC,EAAM,UACC,UACF,GAAIA,EAAM,KAAOD,EAAO,SAAW,KAAOA,EAAO,OAAO,GAAG,EAChE,OAAAA,EAAO,KAAI,EAEPA,EAAO,KAAM,IAAK,KAAKA,EAAO,KAAI,EAC/B,OACF,GAAIA,EAAO,KAAM,IAAK,IAC3B,OAAAA,EAAO,UAAS,EACT,UACF,GAAIA,EAAO,WAChB,OAAO,KACF,GAAIC,EAAM,KAAOD,EAAO,SAAS,SAAUE,EAAG,CAAE,OAAOA,GAAK,KAAOA,GAAK,GAAM,CAAA,EACnF,MAAO,WACF,GAAID,EAAM,KAAOD,EAAO,KAAI,IAAO,IACxC,OAAAA,EAAO,KAAI,EACXC,EAAM,IAAM,GACL,KACF,GAAI,CAACA,EAAM,KAAOD,EAAO,MAAM,wBAAwB,EAC5D,MAAO,OACF,GAAI,CAACC,EAAM,MAAQD,EAAO,MAAM,MAAM,GAAKA,EAAO,MAAM,OAAO,GACpE,MAAO,OACF,GAAI,CAACC,EAAM,KAAOD,EAAO,KAAM,IAAK,IACzC,OAAAC,EAAM,UACND,EAAO,KAAI,EACJ,UACF,GAAI,CAACC,EAAM,KAAOD,EAAO,MAAM,mBAAmB,EACvD,MAAO,SACGA,EAAO,YACjBA,EAAO,KAAI,EAEb,OAAO,IACR,EACD,aAAc,CACZ,cAAe,CAAE,KAAM,GAAK,CAC7B,CACH","x_google_ignoreList":[0]}