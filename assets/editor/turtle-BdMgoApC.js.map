{"version":3,"file":"turtle-BdMgoApC.js","sources":["../node_modules/@codemirror/legacy-modes/mode/turtle.js"],"sourcesContent":["var curPunc;\n\nfunction wordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n}\nvar ops = wordRegexp([]);\nvar keywords = wordRegexp([\"@prefix\", \"@base\", \"a\"]);\nvar operatorChars = /[*+\\-<>=&|]/;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  curPunc = null;\n  if (ch == \"<\" && !stream.match(/^[\\s\\u00a0=]/, false)) {\n    stream.match(/^[^\\s\\u00a0>]*>?/);\n    return \"atom\";\n  }\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenLiteral(ch);\n    return state.tokenize(stream, state);\n  }\n  else if (/[{}\\(\\),\\.;\\[\\]]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  else if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  else if (operatorChars.test(ch)) {\n    stream.eatWhile(operatorChars);\n    return null;\n  }\n  else if (ch == \":\") {\n    return \"operator\";\n  } else {\n    stream.eatWhile(/[_\\w\\d]/);\n    if(stream.peek() == \":\") {\n      return \"variableName.special\";\n    } else {\n      var word = stream.current();\n\n      if(keywords.test(word)) {\n        return \"meta\";\n      }\n\n      if(ch >= \"A\" && ch <= \"Z\") {\n        return \"comment\";\n      } else {\n        return \"keyword\";\n      }\n    }\n    var word = stream.current();\n    if (ops.test(word))\n      return null;\n    else if (keywords.test(word))\n      return \"meta\";\n    else\n      return \"variable\";\n  }\n}\n\nfunction tokenLiteral(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    return \"string\";\n  };\n}\n\nfunction pushContext(state, type, col) {\n  state.context = {prev: state.context, indent: state.indent, col: col, type: type};\n}\nfunction popContext(state) {\n  state.indent = state.context.indent;\n  state.context = state.context.prev;\n}\n\nexport const turtle = {\n  name: \"turtle\",\n  startState: function() {\n    return {tokenize: tokenBase,\n            context: null,\n            indent: 0,\n            col: 0};\n  },\n\n  token: function(stream, state) {\n    if (stream.sol()) {\n      if (state.context && state.context.align == null) state.context.align = false;\n      state.indent = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n\n    if (style != \"comment\" && state.context && state.context.align == null && state.context.type != \"pattern\") {\n      state.context.align = true;\n    }\n\n    if (curPunc == \"(\") pushContext(state, \")\", stream.column());\n    else if (curPunc == \"[\") pushContext(state, \"]\", stream.column());\n    else if (curPunc == \"{\") pushContext(state, \"}\", stream.column());\n    else if (/[\\]\\}\\)]/.test(curPunc)) {\n      while (state.context && state.context.type == \"pattern\") popContext(state);\n      if (state.context && curPunc == state.context.type) popContext(state);\n    }\n    else if (curPunc == \".\" && state.context && state.context.type == \"pattern\") popContext(state);\n    else if (/atom|string|variable/.test(style) && state.context) {\n      if (/[\\}\\]]/.test(state.context.type))\n        pushContext(state, \"pattern\", stream.column());\n      else if (state.context.type == \"pattern\" && !state.context.align) {\n        state.context.align = true;\n        state.context.col = stream.column();\n      }\n    }\n\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var firstChar = textAfter && textAfter.charAt(0);\n    var context = state.context;\n    if (/[\\]\\}]/.test(firstChar))\n      while (context && context.type == \"pattern\") context = context.prev;\n\n    var closing = context && firstChar == context.type;\n    if (!context)\n      return 0;\n    else if (context.type == \"pattern\")\n      return context.col;\n    else if (context.align)\n      return context.col + (closing ? 0 : 1);\n    else\n      return context.indent + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":["curPunc","wordRegexp","words","keywords","operatorChars","tokenBase","stream","state","ch","tokenLiteral","word","quote","escaped","pushContext","type","col","popContext","turtle","style","textAfter","cx","firstChar","context","closing"],"mappings":"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","x_google_ignoreList":[0]}