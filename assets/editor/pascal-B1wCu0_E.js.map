{"version":3,"file":"pascal-B1wCu0_E.js","sources":["../node_modules/@codemirror/legacy-modes/mode/pascal.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar keywords = words(\n  \"absolute and array asm begin case const constructor destructor div do \" +\n    \"downto else end file for function goto if implementation in inherited \" +\n    \"inline interface label mod nil not object of operator or packed procedure \" +\n    \"program record reintroduce repeat self set shl shr string then to type \" +\n    \"unit until uses var while with xor as class dispinterface except exports \" +\n    \"finalization finally initialization inline is library on out packed \" +\n    \"property raise resourcestring threadvar try absolute abstract alias \" +\n    \"assembler bitpacked break cdecl continue cppdecl cvar default deprecated \" +\n    \"dynamic enumerator experimental export external far far16 forward generic \" +\n    \"helper implements index interrupt iocheck local message name near \" +\n    \"nodefault noreturn nostackframe oldfpccall otherwise overload override \" +\n    \"pascal platform private protected public published read register \" +\n    \"reintroduce result safecall saveregisters softfloat specialize static \" +\n    \"stdcall stored strict unaligned unimplemented varargs virtual write\");\nvar atoms = {\"null\": true};\n\nvar isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == \"#\" && state.startOfLine) {\n    stream.skipToEnd();\n    return \"meta\";\n  }\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (ch == \"(\" && stream.eat(\"*\")) {\n    state.tokenize = tokenComment;\n    return tokenComment(stream, state);\n  }\n  if (ch == \"{\") {\n    state.tokenize = tokenCommentBraces;\n    return tokenCommentBraces(stream, state);\n  }\n  if (/[\\[\\]\\(\\),;\\:\\.]/.test(ch)) {\n    return null;\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped) state.tokenize = null;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \")\" && maybeEnd) {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenCommentBraces(stream, state) {\n  var ch;\n  while (ch = stream.next()) {\n    if (ch == \"}\") {\n      state.tokenize = null;\n      break;\n    }\n  }\n  return \"comment\";\n}\n\n// Interface\n\nexport const pascal = {\n  name: \"pascal\",\n\n  startState: function() {\n    return {tokenize: null};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    return style;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {block: {open: \"(*\", close: \"*)\"}}\n  }\n};\n"],"names":["words","str","obj","i","keywords","atoms","isOperatorChar","tokenBase","stream","state","ch","tokenString","tokenComment","tokenCommentBraces","cur","quote","escaped","next","end","maybeEnd","pascal","style"],"mappings":"AAAA,SAASA,EAAMC,EAAK,CAElB,QADIC,EAAM,CAAA,EAAIF,EAAQC,EAAI,MAAM,GAAG,EAC1BE,EAAI,EAAGA,EAAIH,EAAM,OAAQ,EAAEG,EAAGD,EAAIF,EAAMG,CAAC,CAAC,EAAI,GACvD,OAAOD,CACT,CACA,IAAIE,EAAWJ,EACb,s9BAauE,EACrEK,EAAQ,CAAC,KAAQ,EAAI,EAErBC,EAAiB,mBAErB,SAASC,EAAUC,EAAQC,EAAO,CAChC,IAAIC,EAAKF,EAAO,OAChB,GAAIE,GAAM,KAAOD,EAAM,YACrB,OAAAD,EAAO,UAAS,EACT,OAET,GAAIE,GAAM,KAAOA,GAAM,IACrB,OAAAD,EAAM,SAAWE,EAAYD,CAAE,EACxBD,EAAM,SAASD,EAAQC,CAAK,EAErC,GAAIC,GAAM,KAAOF,EAAO,IAAI,GAAG,EAC7B,OAAAC,EAAM,SAAWG,EACVA,EAAaJ,EAAQC,CAAK,EAEnC,GAAIC,GAAM,IACR,OAAAD,EAAM,SAAWI,EACVA,EAAmBL,EAAQC,CAAK,EAEzC,GAAI,mBAAmB,KAAKC,CAAE,EAC5B,OAAO,KAET,GAAI,KAAK,KAAKA,CAAE,EACd,OAAAF,EAAO,SAAS,QAAQ,EACjB,SAET,GAAIE,GAAM,KACJF,EAAO,IAAI,GAAG,EAChB,OAAAA,EAAO,UAAS,EACT,UAGX,GAAIF,EAAe,KAAKI,CAAE,EACxB,OAAAF,EAAO,SAASF,CAAc,EACvB,WAETE,EAAO,SAAS,SAAS,EACzB,IAAIM,EAAMN,EAAO,UACjB,OAAIJ,EAAS,qBAAqBU,CAAG,EAAU,UAC3CT,EAAM,qBAAqBS,CAAG,EAAU,OACrC,UACT,CAEA,SAASH,EAAYI,EAAO,CAC1B,OAAO,SAASP,EAAQC,EAAO,CAE7B,QADIO,EAAU,GAAOC,EAAMC,EAAM,IACzBD,EAAOT,EAAO,KAAI,IAAO,MAAM,CACrC,GAAIS,GAAQF,GAAS,CAACC,EAAS,CAACE,EAAM,GAAM,KAAM,CAClDF,EAAU,CAACA,GAAWC,GAAQ,IAC/B,CACD,OAAIC,GAAO,CAACF,KAASP,EAAM,SAAW,MAC/B,QACX,CACA,CAEA,SAASG,EAAaJ,EAAQC,EAAO,CAEnC,QADIU,EAAW,GAAOT,EACfA,EAAKF,EAAO,QAAQ,CACzB,GAAIE,GAAM,KAAOS,EAAU,CACzBV,EAAM,SAAW,KACjB,KACD,CACDU,EAAYT,GAAM,GACnB,CACD,MAAO,SACT,CAEA,SAASG,EAAmBL,EAAQC,EAAO,CAEzC,QADIC,EACGA,EAAKF,EAAO,QACjB,GAAIE,GAAM,IAAK,CACbD,EAAM,SAAW,KACjB,KACD,CAEH,MAAO,SACT,CAIY,MAACW,EAAS,CACpB,KAAM,SAEN,WAAY,UAAW,CACrB,MAAO,CAAC,SAAU,IAAI,CACvB,EAED,MAAO,SAASZ,EAAQC,EAAO,CAC7B,GAAID,EAAO,WAAY,OAAO,KAC9B,IAAIa,GAASZ,EAAM,UAAYF,GAAWC,EAAQC,CAAK,EACvD,OAAIY,GAAS,WAAaA,GAAS,OAAeA,CAEnD,EAED,aAAc,CACZ,cAAe,YACf,cAAe,CAAC,MAAO,CAAC,KAAM,KAAM,MAAO,IAAI,CAAC,CACjD,CACH","x_google_ignoreList":[0]}