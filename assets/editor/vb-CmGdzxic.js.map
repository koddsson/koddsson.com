{"version":3,"file":"vb-CmGdzxic.js","sources":["../node_modules/@codemirror/legacy-modes/mode/vb.js"],"sourcesContent":["var ERRORCLASS = 'error';\n\nfunction wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n}\n\nvar singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/%&\\\\\\\\|\\\\^~<>!]\");\nvar singleDelimiters = new RegExp('^[\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}@,:`=;\\\\.]');\nvar doubleOperators = new RegExp(\"^((==)|(<>)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\\\*\\\\*))\");\nvar doubleDelimiters = new RegExp(\"^((\\\\+=)|(\\\\-=)|(\\\\*=)|(%=)|(/=)|(&=)|(\\\\|=)|(\\\\^=))\");\nvar tripleDelimiters = new RegExp(\"^((//=)|(>>=)|(<<=)|(\\\\*\\\\*=))\");\nvar identifiers = new RegExp(\"^[_A-Za-z][_A-Za-z0-9]*\");\n\nvar openingKeywords = ['class','module', 'sub','enum','select','while','if','function', 'get','set','property', 'try', 'structure', 'synclock', 'using', 'with'];\nvar middleKeywords = ['else','elseif','case', 'catch', 'finally'];\nvar endKeywords = ['next','loop'];\n\nvar operatorKeywords = ['and', \"andalso\", 'or', 'orelse', 'xor', 'in', 'not', 'is', 'isnot', 'like'];\nvar wordOperators = wordRegexp(operatorKeywords);\n\nvar commonKeywords = [\"#const\", \"#else\", \"#elseif\", \"#end\", \"#if\", \"#region\", \"addhandler\", \"addressof\", \"alias\", \"as\", \"byref\", \"byval\", \"cbool\", \"cbyte\", \"cchar\", \"cdate\", \"cdbl\", \"cdec\", \"cint\", \"clng\", \"cobj\", \"compare\", \"const\", \"continue\", \"csbyte\", \"cshort\", \"csng\", \"cstr\", \"cuint\", \"culng\", \"cushort\", \"declare\", \"default\", \"delegate\", \"dim\", \"directcast\", \"each\", \"erase\", \"error\", \"event\", \"exit\", \"explicit\", \"false\", \"for\", \"friend\", \"gettype\", \"goto\", \"handles\", \"implements\", \"imports\", \"infer\", \"inherits\", \"interface\", \"isfalse\", \"istrue\", \"lib\", \"me\", \"mod\", \"mustinherit\", \"mustoverride\", \"my\", \"mybase\", \"myclass\", \"namespace\", \"narrowing\", \"new\", \"nothing\", \"notinheritable\", \"notoverridable\", \"of\", \"off\", \"on\", \"operator\", \"option\", \"optional\", \"out\", \"overloads\", \"overridable\", \"overrides\", \"paramarray\", \"partial\", \"private\", \"protected\", \"public\", \"raiseevent\", \"readonly\", \"redim\", \"removehandler\", \"resume\", \"return\", \"shadows\", \"shared\", \"static\", \"step\", \"stop\", \"strict\", \"then\", \"throw\", \"to\", \"true\", \"trycast\", \"typeof\", \"until\", \"until\", \"when\", \"widening\", \"withevents\", \"writeonly\"];\n\nvar commontypes = ['object', 'boolean', 'char', 'string', 'byte', 'sbyte', 'short', 'ushort', 'int16', 'uint16', 'integer', 'uinteger', 'int32', 'uint32', 'long', 'ulong', 'int64', 'uint64', 'decimal', 'single', 'double', 'float', 'date', 'datetime', 'intptr', 'uintptr'];\n\nvar keywords = wordRegexp(commonKeywords);\nvar types = wordRegexp(commontypes);\nvar stringPrefixes = '\"';\n\nvar opening = wordRegexp(openingKeywords);\nvar middle = wordRegexp(middleKeywords);\nvar closing = wordRegexp(endKeywords);\nvar doubleClosing = wordRegexp(['end']);\nvar doOpening = wordRegexp(['do']);\n\nvar indentInfo = null;\n\nfunction indent(_stream, state) {\n  state.currentIndent++;\n}\n\nfunction dedent(_stream, state) {\n  state.currentIndent--;\n}\n// tokenizers\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  var ch = stream.peek();\n\n  // Handle Comments\n  if (ch === \"'\") {\n    stream.skipToEnd();\n    return 'comment';\n  }\n\n\n  // Handle Number Literals\n  if (stream.match(/^((&H)|(&O))?[0-9\\.a-f]/i, false)) {\n    var floatLiteral = false;\n    // Floats\n    if (stream.match(/^\\d*\\.\\d+F?/i)) { floatLiteral = true; }\n    else if (stream.match(/^\\d+\\.\\d*F?/)) { floatLiteral = true; }\n    else if (stream.match(/^\\.\\d+F?/)) { floatLiteral = true; }\n\n    if (floatLiteral) {\n      // Float literals may be \"imaginary\"\n      stream.eat(/J/i);\n      return 'number';\n    }\n    // Integers\n    var intLiteral = false;\n    // Hex\n    if (stream.match(/^&H[0-9a-f]+/i)) { intLiteral = true; }\n    // Octal\n    else if (stream.match(/^&O[0-7]+/i)) { intLiteral = true; }\n    // Decimal\n    else if (stream.match(/^[1-9]\\d*F?/)) {\n      // Decimal literals may be \"imaginary\"\n      stream.eat(/J/i);\n      // TODO - Can you have imaginary longs?\n      intLiteral = true;\n    }\n    // Zero by itself with no other piece of number.\n    else if (stream.match(/^0(?![\\dx])/i)) { intLiteral = true; }\n    if (intLiteral) {\n      // Integer literals may be \"long\"\n      stream.eat(/L/i);\n      return 'number';\n    }\n  }\n\n  // Handle Strings\n  if (stream.match(stringPrefixes)) {\n    state.tokenize = tokenStringFactory(stream.current());\n    return state.tokenize(stream, state);\n  }\n\n  // Handle operators and Delimiters\n  if (stream.match(tripleDelimiters) || stream.match(doubleDelimiters)) {\n    return null;\n  }\n  if (stream.match(doubleOperators)\n      || stream.match(singleOperators)\n      || stream.match(wordOperators)) {\n    return 'operator';\n  }\n  if (stream.match(singleDelimiters)) {\n    return null;\n  }\n  if (stream.match(doOpening)) {\n    indent(stream,state);\n    state.doInCurrentLine = true;\n    return 'keyword';\n  }\n  if (stream.match(opening)) {\n    if (! state.doInCurrentLine)\n      indent(stream,state);\n    else\n      state.doInCurrentLine = false;\n    return 'keyword';\n  }\n  if (stream.match(middle)) {\n    return 'keyword';\n  }\n\n  if (stream.match(doubleClosing)) {\n    dedent(stream,state);\n    dedent(stream,state);\n    return 'keyword';\n  }\n  if (stream.match(closing)) {\n    dedent(stream,state);\n    return 'keyword';\n  }\n\n  if (stream.match(types)) {\n    return 'keyword';\n  }\n\n  if (stream.match(keywords)) {\n    return 'keyword';\n  }\n\n  if (stream.match(identifiers)) {\n    return 'variable';\n  }\n\n  // Handle non-detected items\n  stream.next();\n  return ERRORCLASS;\n}\n\nfunction tokenStringFactory(delimiter) {\n  var singleline = delimiter.length == 1;\n  var OUTCLASS = 'string';\n\n  return function(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^'\"]/);\n      if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        return OUTCLASS;\n      } else {\n        stream.eat(/['\"]/);\n      }\n    }\n    if (singleline) {\n      state.tokenize = tokenBase;\n    }\n    return OUTCLASS;\n  };\n}\n\n\nfunction tokenLexer(stream, state) {\n  var style = state.tokenize(stream, state);\n  var current = stream.current();\n\n  // Handle '.' connected identifiers\n  if (current === '.') {\n    style = state.tokenize(stream, state);\n    if (style === 'variable') {\n      return 'variable';\n    } else {\n      return ERRORCLASS;\n    }\n  }\n\n\n  var delimiter_index = '[({'.indexOf(current);\n  if (delimiter_index !== -1) {\n    indent(stream, state );\n  }\n  if (indentInfo === 'dedent') {\n    if (dedent(stream, state)) {\n      return ERRORCLASS;\n    }\n  }\n  delimiter_index = '])}'.indexOf(current);\n  if (delimiter_index !== -1) {\n    if (dedent(stream, state)) {\n      return ERRORCLASS;\n    }\n  }\n\n  return style;\n}\n\nexport const vb = {\n  name: \"vb\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      lastToken: null,\n      currentIndent: 0,\n      nextLineIndent: 0,\n      doInCurrentLine: false\n\n\n    };\n  },\n\n  token: function(stream, state) {\n    if (stream.sol()) {\n      state.currentIndent += state.nextLineIndent;\n      state.nextLineIndent = 0;\n      state.doInCurrentLine = 0;\n    }\n    var style = tokenLexer(stream, state);\n\n    state.lastToken = {style:style, content: stream.current()};\n\n\n\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var trueText = textAfter.replace(/^\\s+|\\s+$/g, '') ;\n    if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return cx.unit*(state.currentIndent-1);\n    if(state.currentIndent < 0) return 0;\n    return state.currentIndent * cx.unit;\n  },\n\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", '\"']},\n    commentTokens: {line: \"'\"},\n    autocomplete: openingKeywords.concat(middleKeywords).concat(endKeywords)\n      .concat(operatorKeywords).concat(commonKeywords).concat(commontypes)\n  }\n};\n"],"names":["ERRORCLASS","wordRegexp","words","singleOperators","singleDelimiters","doubleOperators","doubleDelimiters","tripleDelimiters","identifiers","openingKeywords","middleKeywords","endKeywords","operatorKeywords","wordOperators","commonKeywords","commontypes","keywords","types","stringPrefixes","opening","middle","closing","doubleClosing","doOpening","indent","_stream","state","dedent","tokenBase","stream","ch","floatLiteral","intLiteral","tokenStringFactory","delimiter","singleline","OUTCLASS","tokenLexer","style","current","delimiter_index","vb","textAfter","cx","trueText"],"mappings":"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","x_google_ignoreList":[0]}