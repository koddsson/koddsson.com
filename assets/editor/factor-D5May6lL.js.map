{"version":3,"file":"factor-D5May6lL.js","sources":["../node_modules/@codemirror/legacy-modes/mode/factor.js"],"sourcesContent":["import {simpleMode} from \"./simple-mode.js\"\n\nexport const factor = simpleMode({\n    start: [\n      // comments\n      {regex: /#?!.*/, token: \"comment\"},\n      // strings \"\"\", multiline --> state\n      {regex: /\"\"\"/, token: \"string\", next: \"string3\"},\n      {regex: /(STRING:)(\\s)/, token: [\"keyword\", null], next: \"string2\"},\n      {regex: /\\S*?\"/, token: \"string\", next: \"string\"},\n      // numbers: dec, hex, unicode, bin, fractional, complex\n      {regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/, token: \"number\"},\n      //{regex: /[+-]?/} //fractional\n      // definition: defining word, defined word, etc\n      {regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/, token: [\"keyword\", null, \"def\", null, \"bracket\"], next: \"stack\"},\n      // method definition: defining word, type, defined word, etc\n      {regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/, token: [\"keyword\", null, \"def\", null, \"tag\"]},\n      // vocabulary using --> state\n      {regex: /USING\\:/, token: \"keyword\", next: \"vocabulary\"},\n      // vocabulary definition/use\n      {regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"tag\"]},\n      // definition: a defining word, defined word\n      {regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"def\"]},\n      // \"keywords\", incl. ; t f . [ ] { } defining words\n      {regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/, token: \"keyword\"},\n      // <constructors> and the like\n      {regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/, token: \"builtin\"},\n      {regex: /[\\)><]+\\S+(?=\\s|$)/, token: \"builtin\"},\n      // operators\n      {regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/, token: \"keyword\"},\n      // any id (?)\n      {regex: /\\S+/, token: \"variable\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    vocabulary: [\n      {regex: /;/, token: \"keyword\", next: \"start\"},\n      {regex: /\\S+/, token: \"tag\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    string: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string2: [\n      {regex: /^;/, token: \"keyword\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string3: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    stack: [\n      {regex: /\\)/, token: \"bracket\", next: \"start\"},\n      {regex: /--/, token: \"bracket\"},\n      {regex: /\\S+/, token: \"meta\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    languageData: {\n      name: \"factor\",\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      commentTokens: {line: \"!\"}\n    }\n  });\n"],"names":["factor","simpleMode"],"mappings":"8CAEY,MAACA,EAASC,EAAW,CAC7B,MAAO,CAEL,CAAC,MAAO,QAAS,MAAO,SAAS,EAEjC,CAAC,MAAO,MAAO,MAAO,SAAU,KAAM,SAAS,EAC/C,CAAC,MAAO,gBAAiB,MAAO,CAAC,UAAW,IAAI,EAAG,KAAM,SAAS,EAClE,CAAC,MAAO,QAAS,MAAO,SAAU,KAAM,QAAQ,EAEhD,CAAC,MAAO,kEAAmE,MAAO,QAAQ,EAG1F,CAAC,MAAO,yCAA0C,MAAO,CAAC,UAAW,KAAM,MAAO,KAAM,SAAS,EAAG,KAAM,OAAO,EAEjH,CAAC,MAAO,4BAA6B,MAAO,CAAC,UAAW,KAAM,MAAO,KAAM,KAAK,CAAC,EAEjF,CAAC,MAAO,UAAW,MAAO,UAAW,KAAM,YAAY,EAEvD,CAAC,MAAO,iCAAkC,MAAO,CAAC,UAAW,KAAM,KAAK,CAAC,EAEzE,CAAC,MAAO,4BAA6B,MAAO,CAAC,UAAW,KAAM,KAAK,CAAC,EAEpE,CAAC,MAAO,qFAAsF,MAAO,SAAS,EAE9G,CAAC,MAAO,0BAA2B,MAAO,SAAS,EACnD,CAAC,MAAO,qBAAsB,MAAO,SAAS,EAE9C,CAAC,MAAO,6BAA8B,MAAO,SAAS,EAEtD,CAAC,MAAO,MAAO,MAAO,UAAU,EAChC,CAAC,MAAO,QAAS,MAAO,IAAI,CAC7B,EACD,WAAY,CACV,CAAC,MAAO,IAAK,MAAO,UAAW,KAAM,OAAO,EAC5C,CAAC,MAAO,MAAO,MAAO,KAAK,EAC3B,CAAC,MAAO,QAAS,MAAO,IAAI,CAC7B,EACD,OAAQ,CACN,CAAC,MAAO,mBAAoB,MAAO,SAAU,KAAM,OAAO,EAC1D,CAAC,MAAO,KAAM,MAAO,QAAQ,CAC9B,EACD,QAAS,CACP,CAAC,MAAO,KAAM,MAAO,UAAW,KAAM,OAAO,EAC7C,CAAC,MAAO,KAAM,MAAO,QAAQ,CAC9B,EACD,QAAS,CACP,CAAC,MAAO,qBAAsB,MAAO,SAAU,KAAM,OAAO,EAC5D,CAAC,MAAO,KAAM,MAAO,QAAQ,CAC9B,EACD,MAAO,CACL,CAAC,MAAO,KAAM,MAAO,UAAW,KAAM,OAAO,EAC7C,CAAC,MAAO,KAAM,MAAO,SAAS,EAC9B,CAAC,MAAO,MAAO,MAAO,MAAM,EAC5B,CAAC,MAAO,QAAS,MAAO,IAAI,CAC7B,EACD,aAAc,CACZ,KAAM,SACN,iBAAkB,CAAC,QAAS,aAAc,SAAU,UAAW,OAAO,EACtE,cAAe,CAAC,KAAM,GAAG,CAC1B,CACF,CAAA","x_google_ignoreList":[0]}