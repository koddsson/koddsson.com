{"version":3,"file":"crystal-BacJvaF1.js","sources":["../node_modules/@codemirror/legacy-modes/mode/crystal.js"],"sourcesContent":["function wordRegExp(words, end) {\n  return new RegExp((end ? \"\" : \"^\") + \"(?:\" + words.join(\"|\") + \")\" + (end ? \"$\" : \"\\\\b\"));\n}\n\nfunction chain(tokenize, stream, state) {\n  state.tokenize.push(tokenize);\n  return tokenize(stream, state);\n}\n\nvar operators = /^(?:[-+/%|&^]|\\*\\*?|[<>]{2})/;\nvar conditionalOperators = /^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/;\nvar indexingOperators = /^(?:\\[\\][?=]?)/;\nvar anotherOperators = /^(?:\\.(?:\\.{2})?|->|[?:])/;\nvar idents = /^[a-z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\nvar types = /^[A-Z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\nvar keywords = wordRegExp([\n  \"abstract\", \"alias\", \"as\", \"asm\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"do\",\n  \"else\", \"elsif\", \"end\", \"ensure\", \"enum\", \"extend\", \"for\", \"fun\", \"if\",\n  \"include\", \"instance_sizeof\", \"lib\", \"macro\", \"module\", \"next\", \"of\", \"out\", \"pointerof\",\n  \"private\", \"protected\", \"rescue\", \"return\", \"require\", \"select\", \"sizeof\", \"struct\",\n  \"super\", \"then\", \"type\", \"typeof\", \"uninitialized\", \"union\", \"unless\", \"until\", \"when\", \"while\", \"with\",\n  \"yield\", \"__DIR__\", \"__END_LINE__\", \"__FILE__\", \"__LINE__\"\n]);\nvar atomWords = wordRegExp([\"true\", \"false\", \"nil\", \"self\"]);\nvar indentKeywordsArray = [\n  \"def\", \"fun\", \"macro\",\n  \"class\", \"module\", \"struct\", \"lib\", \"enum\", \"union\",\n  \"do\", \"for\"\n];\nvar indentKeywords = wordRegExp(indentKeywordsArray);\nvar indentExpressionKeywordsArray = [\"if\", \"unless\", \"case\", \"while\", \"until\", \"begin\", \"then\"];\nvar indentExpressionKeywords = wordRegExp(indentExpressionKeywordsArray);\nvar dedentKeywordsArray = [\"end\", \"else\", \"elsif\", \"rescue\", \"ensure\"];\nvar dedentKeywords = wordRegExp(dedentKeywordsArray);\nvar dedentPunctualsArray = [\"\\\\)\", \"\\\\}\", \"\\\\]\"];\nvar dedentPunctuals = new RegExp(\"^(?:\" + dedentPunctualsArray.join(\"|\") + \")$\");\nvar nextTokenizer = {\n  \"def\": tokenFollowIdent, \"fun\": tokenFollowIdent, \"macro\": tokenMacroDef,\n  \"class\": tokenFollowType, \"module\": tokenFollowType, \"struct\": tokenFollowType,\n  \"lib\": tokenFollowType, \"enum\": tokenFollowType, \"union\": tokenFollowType\n};\nvar matching = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\", \"<\": \">\"};\n\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  // Macros\n  if (state.lastToken != \"\\\\\" && stream.match(\"{%\", false)) {\n    return chain(tokenMacro(\"%\", \"%\"), stream, state);\n  }\n\n  if (state.lastToken != \"\\\\\" && stream.match(\"{{\", false)) {\n    return chain(tokenMacro(\"{\", \"}\"), stream, state);\n  }\n\n  // Comments\n  if (stream.peek() == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  // Variables and keywords\n  var matched;\n  if (stream.match(idents)) {\n    stream.eat(/[?!]/);\n\n    matched = stream.current();\n    if (stream.eat(\":\")) {\n      return \"atom\";\n    } else if (state.lastToken == \".\") {\n      return \"property\";\n    } else if (keywords.test(matched)) {\n      if (indentKeywords.test(matched)) {\n        if (!(matched == \"fun\" && state.blocks.indexOf(\"lib\") >= 0) && !(matched == \"def\" && state.lastToken == \"abstract\")) {\n          state.blocks.push(matched);\n          state.currentIndent += 1;\n        }\n      } else if ((state.lastStyle == \"operator\" || !state.lastStyle) && indentExpressionKeywords.test(matched)) {\n        state.blocks.push(matched);\n        state.currentIndent += 1;\n      } else if (matched == \"end\") {\n        state.blocks.pop();\n        state.currentIndent -= 1;\n      }\n\n      if (nextTokenizer.hasOwnProperty(matched)) {\n        state.tokenize.push(nextTokenizer[matched]);\n      }\n\n      return \"keyword\";\n    } else if (atomWords.test(matched)) {\n      return \"atom\";\n    }\n\n    return \"variable\";\n  }\n\n  // Class variables and instance variables\n  // or attributes\n  if (stream.eat(\"@\")) {\n    if (stream.peek() == \"[\") {\n      return chain(tokenNest(\"[\", \"]\", \"meta\"), stream, state);\n    }\n\n    stream.eat(\"@\");\n    stream.match(idents) || stream.match(types);\n    return \"propertyName\";\n  }\n\n  // Constants and types\n  if (stream.match(types)) {\n    return \"tag\";\n  }\n\n  // Symbols or ':' operator\n  if (stream.eat(\":\")) {\n    if (stream.eat(\"\\\"\")) {\n      return chain(tokenQuote(\"\\\"\", \"atom\", false), stream, state);\n    } else if (stream.match(idents) || stream.match(types) ||\n               stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators)) {\n      return \"atom\";\n    }\n    stream.eat(\":\");\n    return \"operator\";\n  }\n\n  // Strings\n  if (stream.eat(\"\\\"\")) {\n    return chain(tokenQuote(\"\\\"\", \"string\", true), stream, state);\n  }\n\n  // Strings or regexps or macro variables or '%' operator\n  if (stream.peek() == \"%\") {\n    var style = \"string\";\n    var embed = true;\n    var delim;\n\n    if (stream.match(\"%r\")) {\n      // Regexps\n      style = \"string.special\";\n      delim = stream.next();\n    } else if (stream.match(\"%w\")) {\n      embed = false;\n      delim = stream.next();\n    } else if (stream.match(\"%q\")) {\n      embed = false;\n      delim = stream.next();\n    } else {\n      if(delim = stream.match(/^%([^\\w\\s=])/)) {\n        delim = delim[1];\n      } else if (stream.match(/^%[a-zA-Z_\\u009F-\\uFFFF][\\w\\u009F-\\uFFFF]*/)) {\n        // Macro variables\n        return \"meta\";\n      } else if (stream.eat('%')) {\n        // '%' operator\n        return \"operator\";\n      }\n    }\n\n    if (matching.hasOwnProperty(delim)) {\n      delim = matching[delim];\n    }\n    return chain(tokenQuote(delim, style, embed), stream, state);\n  }\n\n  // Here Docs\n  if (matched = stream.match(/^<<-('?)([A-Z]\\w*)\\1/)) {\n    return chain(tokenHereDoc(matched[2], !matched[1]), stream, state)\n  }\n\n  // Characters\n  if (stream.eat(\"'\")) {\n    stream.match(/^(?:[^']|\\\\(?:[befnrtv0'\"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\\{[0-9a-fA-F]{1,6}\\})))/);\n    stream.eat(\"'\");\n    return \"atom\";\n  }\n\n  // Numbers\n  if (stream.eat(\"0\")) {\n    if (stream.eat(\"x\")) {\n      stream.match(/^[0-9a-fA-F_]+/);\n    } else if (stream.eat(\"o\")) {\n      stream.match(/^[0-7_]+/);\n    } else if (stream.eat(\"b\")) {\n      stream.match(/^[01_]+/);\n    }\n    return \"number\";\n  }\n\n  if (stream.eat(/^\\d/)) {\n    stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+-]?\\d+)?/);\n    return \"number\";\n  }\n\n  // Operators\n  if (stream.match(operators)) {\n    stream.eat(\"=\"); // Operators can follow assign symbol.\n    return \"operator\";\n  }\n\n  if (stream.match(conditionalOperators) || stream.match(anotherOperators)) {\n    return \"operator\";\n  }\n\n  // Parens and braces\n  if (matched = stream.match(/[({[]/, false)) {\n    matched = matched[0];\n    return chain(tokenNest(matched, matching[matched], null), stream, state);\n  }\n\n  // Escapes\n  if (stream.eat(\"\\\\\")) {\n    stream.next();\n    return \"meta\";\n  }\n\n  stream.next();\n  return null;\n}\n\nfunction tokenNest(begin, end, style, started) {\n  return function (stream, state) {\n    if (!started && stream.match(begin)) {\n      state.tokenize[state.tokenize.length - 1] = tokenNest(begin, end, style, true);\n      state.currentIndent += 1;\n      return style;\n    }\n\n    var nextStyle = tokenBase(stream, state);\n    if (stream.current() === end) {\n      state.tokenize.pop();\n      state.currentIndent -= 1;\n      nextStyle = style;\n    }\n\n    return nextStyle;\n  };\n}\n\nfunction tokenMacro(begin, end, started) {\n  return function (stream, state) {\n    if (!started && stream.match(\"{\" + begin)) {\n      state.currentIndent += 1;\n      state.tokenize[state.tokenize.length - 1] = tokenMacro(begin, end, true);\n      return \"meta\";\n    }\n\n    if (stream.match(end + \"}\")) {\n      state.currentIndent -= 1;\n      state.tokenize.pop();\n      return \"meta\";\n    }\n\n    return tokenBase(stream, state);\n  };\n}\n\nfunction tokenMacroDef(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  var matched;\n  if (matched = stream.match(idents)) {\n    if (matched == \"def\") {\n      return \"keyword\";\n    }\n    stream.eat(/[?!]/);\n  }\n\n  state.tokenize.pop();\n  return \"def\";\n}\n\nfunction tokenFollowIdent(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  if (stream.match(idents)) {\n    stream.eat(/[!?]/);\n  } else {\n    stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators);\n  }\n  state.tokenize.pop();\n  return \"def\";\n}\n\nfunction tokenFollowType(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  stream.match(types);\n  state.tokenize.pop();\n  return \"def\";\n}\n\nfunction tokenQuote(end, style, embed) {\n  return function (stream, state) {\n    var escaped = false;\n\n    while (stream.peek()) {\n      if (!escaped) {\n        if (stream.match(\"{%\", false)) {\n          state.tokenize.push(tokenMacro(\"%\", \"%\"));\n          return style;\n        }\n\n        if (stream.match(\"{{\", false)) {\n          state.tokenize.push(tokenMacro(\"{\", \"}\"));\n          return style;\n        }\n\n        if (embed && stream.match(\"#{\", false)) {\n          state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n          return style;\n        }\n\n        var ch = stream.next();\n\n        if (ch == end) {\n          state.tokenize.pop();\n          return style;\n        }\n\n        escaped = embed && ch == \"\\\\\";\n      } else {\n        stream.next();\n        escaped = false;\n      }\n    }\n\n    return style;\n  };\n}\n\nfunction tokenHereDoc(phrase, embed) {\n  return function (stream, state) {\n    if (stream.sol()) {\n      stream.eatSpace()\n      if (stream.match(phrase)) {\n        state.tokenize.pop();\n        return \"string\";\n      }\n    }\n\n    var escaped = false;\n    while (stream.peek()) {\n      if (!escaped) {\n        if (stream.match(\"{%\", false)) {\n          state.tokenize.push(tokenMacro(\"%\", \"%\"));\n          return \"string\";\n        }\n\n        if (stream.match(\"{{\", false)) {\n          state.tokenize.push(tokenMacro(\"{\", \"}\"));\n          return \"string\";\n        }\n\n        if (embed && stream.match(\"#{\", false)) {\n          state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n          return \"string\";\n        }\n\n        escaped = stream.next() == \"\\\\\" && embed;\n      } else {\n        stream.next();\n        escaped = false;\n      }\n    }\n\n    return \"string\";\n  }\n}\n\nexport const crystal = {\n  name: \"crystal\",\n  startState: function () {\n    return {\n      tokenize: [tokenBase],\n      currentIndent: 0,\n      lastToken: null,\n      lastStyle: null,\n      blocks: []\n    };\n  },\n\n  token: function (stream, state) {\n    var style = state.tokenize[state.tokenize.length - 1](stream, state);\n    var token = stream.current();\n\n    if (style && style != \"comment\") {\n      state.lastToken = token;\n      state.lastStyle = style;\n    }\n\n    return style;\n  },\n\n  indent: function (state, textAfter, cx) {\n    textAfter = textAfter.replace(/^\\s*(?:\\{%)?\\s*|\\s*(?:%\\})?\\s*$/g, \"\");\n\n    if (dedentKeywords.test(textAfter) || dedentPunctuals.test(textAfter)) {\n      return cx.unit * (state.currentIndent - 1);\n    }\n\n    return cx.unit * state.currentIndent;\n  },\n\n  languageData: {\n    indentOnInput: wordRegExp(dedentPunctualsArray.concat(dedentKeywordsArray), true),\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":["wordRegExp","words","end","chain","tokenize","stream","state","operators","conditionalOperators","indexingOperators","anotherOperators","idents","types","keywords","atomWords","indentKeywordsArray","indentKeywords","indentExpressionKeywordsArray","indentExpressionKeywords","dedentKeywordsArray","dedentKeywords","dedentPunctualsArray","dedentPunctuals","nextTokenizer","tokenFollowIdent","tokenMacroDef","tokenFollowType","matching","tokenBase","tokenMacro","matched","tokenNest","tokenQuote","style","embed","delim","tokenHereDoc","begin","started","nextStyle","escaped","ch","phrase","crystal","token","textAfter","cx"],"mappings":"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","x_google_ignoreList":[0]}