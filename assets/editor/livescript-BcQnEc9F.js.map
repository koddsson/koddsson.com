{"version":3,"file":"livescript-BcQnEc9F.js","sources":["../node_modules/@codemirror/legacy-modes/mode/livescript.js"],"sourcesContent":["var tokenBase = function(stream, state) {\n  var next_rule = state.next || \"start\";\n  if (next_rule) {\n    state.next = state.next;\n    var nr = Rules[next_rule];\n    if (nr.splice) {\n      for (var i$ = 0; i$ < nr.length; ++i$) {\n        var r = nr[i$];\n        if (r.regex && stream.match(r.regex)) {\n          state.next = r.next || state.next;\n          return r.token;\n        }\n      }\n      stream.next();\n      return 'error';\n    }\n    if (stream.match(r = Rules[next_rule])) {\n      if (r.regex && stream.match(r.regex)) {\n        state.next = r.next;\n        return r.token;\n      } else {\n        stream.next();\n        return 'error';\n      }\n    }\n  }\n  stream.next();\n  return 'error';\n};\n\nvar identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\nvar indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\nvar keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\nvar stringfill = {\n  token: 'string',\n  regex: '.+'\n};\nvar Rules = {\n  start: [\n    {\n      token: 'docComment',\n      regex: '/\\\\*',\n      next: 'comment'\n    }, {\n      token: 'comment',\n      regex: '#.*'\n    }, {\n      token: 'keyword',\n      regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n    }, {\n      token: 'atom',\n      regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n    }, {\n      token: 'invalid',\n      regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n    }, {\n      token: 'className.standard',\n      regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n    }, {\n      token: 'variableName.function.standard',\n      regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n    }, {\n      token: 'variableName.standard',\n      regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n    }, {\n      token: 'variableName',\n      regex: identifier + '\\\\s*:(?![:=])'\n    }, {\n      token: 'variableName',\n      regex: identifier\n    }, {\n      token: 'operatorKeyword',\n      regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n    }, {\n      token: 'keyword',\n      regex: '(?:@+|::|\\\\.\\\\.)',\n      next: 'key'\n    }, {\n      token: 'operatorKeyword',\n      regex: '\\\\.\\\\s*',\n      next: 'key'\n    }, {\n      token: 'string',\n      regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n    }, {\n      token: 'docString',\n      regex: '\\'\\'\\'',\n      next: 'qdoc'\n    }, {\n      token: 'docString',\n      regex: '\"\"\"',\n      next: 'qqdoc'\n    }, {\n      token: 'string',\n      regex: '\\'',\n      next: 'qstring'\n    }, {\n      token: 'string',\n      regex: '\"',\n      next: 'qqstring'\n    }, {\n      token: 'string',\n      regex: '`',\n      next: 'js'\n    }, {\n      token: 'string',\n      regex: '<\\\\[',\n      next: 'words'\n    }, {\n      token: 'regexp',\n      regex: '//',\n      next: 'heregex'\n    }, {\n      token: 'regexp',\n      regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n      next: 'key'\n    }, {\n      token: 'number',\n      regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n    }, {\n      token: 'paren',\n      regex: '[({[]'\n    }, {\n      token: 'paren',\n      regex: '[)}\\\\]]',\n      next: 'key'\n    }, {\n      token: 'operatorKeyword',\n      regex: '\\\\S+'\n    }, {\n      token: 'content',\n      regex: '\\\\s+'\n    }\n  ],\n  heregex: [\n    {\n      token: 'regexp',\n      regex: '.*?//[gimy$?]{0,4}',\n      next: 'start'\n    }, {\n      token: 'regexp',\n      regex: '\\\\s*#{'\n    }, {\n      token: 'comment',\n      regex: '\\\\s+(?:#.*)?'\n    }, {\n      token: 'regexp',\n      regex: '\\\\S+'\n    }\n  ],\n  key: [\n    {\n      token: 'operatorKeyword',\n      regex: '[.?@!]+'\n    }, {\n      token: 'variableName',\n      regex: identifier,\n      next: 'start'\n    }, {\n      token: 'content',\n      regex: '',\n      next: 'start'\n    }\n  ],\n  comment: [\n    {\n      token: 'docComment',\n      regex: '.*?\\\\*/',\n      next: 'start'\n    }, {\n      token: 'docComment',\n      regex: '.+'\n    }\n  ],\n  qdoc: [\n    {\n      token: 'string',\n      regex: \".*?'''\",\n      next: 'key'\n    }, stringfill\n  ],\n  qqdoc: [\n    {\n      token: 'string',\n      regex: '.*?\"\"\"',\n      next: 'key'\n    }, stringfill\n  ],\n  qstring: [\n    {\n      token: 'string',\n      regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n      next: 'key'\n    }, stringfill\n  ],\n  qqstring: [\n    {\n      token: 'string',\n      regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n      next: 'key'\n    }, stringfill\n  ],\n  js: [\n    {\n      token: 'string',\n      regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n      next: 'key'\n    }, stringfill\n  ],\n  words: [\n    {\n      token: 'string',\n      regex: '.*?\\\\]>',\n      next: 'key'\n    }, stringfill\n  ]\n};\nfor (var idx in Rules) {\n  var r = Rules[idx];\n  if (r.splice) {\n    for (var i = 0, len = r.length; i < len; ++i) {\n      var rr = r[i];\n      if (typeof rr.regex === 'string') {\n        Rules[idx][i].regex = new RegExp('^' + rr.regex);\n      }\n    }\n  } else if (typeof rr.regex === 'string') {\n    Rules[idx].regex = new RegExp('^' + r.regex);\n  }\n}\n\nexport const liveScript = {\n  name: \"livescript\",\n  startState: function(){\n    return {\n      next: 'start',\n      lastToken: {style: null, indent: 0, content: \"\"}\n    };\n  },\n  token: function(stream, state){\n    while (stream.pos == stream.start)\n      var style = tokenBase(stream, state);\n    state.lastToken = {\n      style: style,\n      indent: stream.indentation(),\n      content: stream.current()\n    };\n    return style.replace(/\\./g, ' ');\n  },\n  indent: function(state){\n    var indentation = state.lastToken.indent;\n    if (state.lastToken.content.match(indenter)) {\n      indentation += 2;\n    }\n    return indentation;\n  }\n};\n"],"names":["tokenBase","stream","state","next_rule","nr","Rules","i$","r","identifier","indenter","keywordend","stringfill","idx","i","len","rr","liveScript","style","indentation"],"mappings":"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","x_google_ignoreList":[0]}