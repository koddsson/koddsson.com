{"version":3,"file":"sparql-B-xHKz_K.js","sources":["../node_modules/@codemirror/legacy-modes/mode/sparql.js"],"sourcesContent":["var curPunc;\n\nfunction wordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n}\nvar ops = wordRegexp([\"str\", \"lang\", \"langmatches\", \"datatype\", \"bound\", \"sameterm\", \"isiri\", \"isuri\",\n                      \"iri\", \"uri\", \"bnode\", \"count\", \"sum\", \"min\", \"max\", \"avg\", \"sample\",\n                      \"group_concat\", \"rand\", \"abs\", \"ceil\", \"floor\", \"round\", \"concat\", \"substr\", \"strlen\",\n                      \"replace\", \"ucase\", \"lcase\", \"encode_for_uri\", \"contains\", \"strstarts\", \"strends\",\n                      \"strbefore\", \"strafter\", \"year\", \"month\", \"day\", \"hours\", \"minutes\", \"seconds\",\n                      \"timezone\", \"tz\", \"now\", \"uuid\", \"struuid\", \"md5\", \"sha1\", \"sha256\", \"sha384\",\n                      \"sha512\", \"coalesce\", \"if\", \"strlang\", \"strdt\", \"isnumeric\", \"regex\", \"exists\",\n                      \"isblank\", \"isliteral\", \"a\", \"bind\"]);\nvar keywords = wordRegexp([\"base\", \"prefix\", \"select\", \"distinct\", \"reduced\", \"construct\", \"describe\",\n                           \"ask\", \"from\", \"named\", \"where\", \"order\", \"limit\", \"offset\", \"filter\", \"optional\",\n                           \"graph\", \"by\", \"asc\", \"desc\", \"as\", \"having\", \"undef\", \"values\", \"group\",\n                           \"minus\", \"in\", \"not\", \"service\", \"silent\", \"using\", \"insert\", \"delete\", \"union\",\n                           \"true\", \"false\", \"with\",\n                           \"data\", \"copy\", \"to\", \"move\", \"add\", \"create\", \"drop\", \"clear\", \"load\", \"into\"]);\nvar operatorChars = /[*+\\-<>=&|\\^\\/!\\?]/;\nvar PN_CHARS = \"[A-Za-z_\\\\-0-9]\";\nvar PREFIX_START = new RegExp(\"[A-Za-z]\");\nvar PREFIX_REMAINDER = new RegExp(\"((\" + PN_CHARS + \"|\\\\.)*(\" + PN_CHARS + \"))?:\");\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  curPunc = null;\n  if (ch == \"$\" || ch == \"?\") {\n    if(ch == \"?\" && stream.match(/\\s/, false)){\n      return \"operator\";\n    }\n    stream.match(/^[A-Za-z0-9_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][A-Za-z0-9_\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]*/);\n    return \"variableName.local\";\n  }\n  else if (ch == \"<\" && !stream.match(/^[\\s\\u00a0=]/, false)) {\n    stream.match(/^[^\\s\\u00a0>]*>?/);\n    return \"atom\";\n  }\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenLiteral(ch);\n    return state.tokenize(stream, state);\n  }\n  else if (/[{}\\(\\),\\.;\\[\\]]/.test(ch)) {\n    curPunc = ch;\n    return \"bracket\";\n  }\n  else if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  else if (operatorChars.test(ch)) {\n    return \"operator\";\n  }\n  else if (ch == \":\") {\n    eatPnLocal(stream);\n    return \"atom\";\n  }\n  else if (ch == \"@\") {\n    stream.eatWhile(/[a-z\\d\\-]/i);\n    return \"meta\";\n  }\n  else if (PREFIX_START.test(ch) && stream.match(PREFIX_REMAINDER)) {\n    eatPnLocal(stream);\n    return \"atom\";\n  }\n  stream.eatWhile(/[_\\w\\d]/);\n  var word = stream.current();\n  if (ops.test(word))\n    return \"builtin\";\n  else if (keywords.test(word))\n    return \"keyword\";\n  else\n    return \"variable\";\n}\n\nfunction eatPnLocal(stream) {\n  stream.match(/(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/i);\n}\n\nfunction tokenLiteral(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    return \"string\";\n  };\n}\n\nfunction pushContext(state, type, col) {\n  state.context = {prev: state.context, indent: state.indent, col: col, type: type};\n}\nfunction popContext(state) {\n  state.indent = state.context.indent;\n  state.context = state.context.prev;\n}\n\nexport const sparql = {\n  name: \"sparql\",\n\n  startState: function() {\n    return {tokenize: tokenBase,\n            context: null,\n            indent: 0,\n            col: 0};\n  },\n\n  token: function(stream, state) {\n    if (stream.sol()) {\n      if (state.context && state.context.align == null) state.context.align = false;\n      state.indent = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n\n    if (style != \"comment\" && state.context && state.context.align == null && state.context.type != \"pattern\") {\n      state.context.align = true;\n    }\n\n    if (curPunc == \"(\") pushContext(state, \")\", stream.column());\n    else if (curPunc == \"[\") pushContext(state, \"]\", stream.column());\n    else if (curPunc == \"{\") pushContext(state, \"}\", stream.column());\n    else if (/[\\]\\}\\)]/.test(curPunc)) {\n      while (state.context && state.context.type == \"pattern\") popContext(state);\n      if (state.context && curPunc == state.context.type) {\n        popContext(state);\n        if (curPunc == \"}\" && state.context && state.context.type == \"pattern\")\n          popContext(state);\n      }\n    }\n    else if (curPunc == \".\" && state.context && state.context.type == \"pattern\") popContext(state);\n    else if (/atom|string|variable/.test(style) && state.context) {\n      if (/[\\}\\]]/.test(state.context.type))\n        pushContext(state, \"pattern\", stream.column());\n      else if (state.context.type == \"pattern\" && !state.context.align) {\n        state.context.align = true;\n        state.context.col = stream.column();\n      }\n    }\n\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var firstChar = textAfter && textAfter.charAt(0);\n    var context = state.context;\n    if (/[\\]\\}]/.test(firstChar))\n      while (context && context.type == \"pattern\") context = context.prev;\n\n    var closing = context && firstChar == context.type;\n    if (!context)\n      return 0;\n    else if (context.type == \"pattern\")\n      return context.col;\n    else if (context.align)\n      return context.col + (closing ? 0 : 1);\n    else\n      return context.indent + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n\n"],"names":["curPunc","wordRegexp","words","ops","keywords","operatorChars","PN_CHARS","PREFIX_START","PREFIX_REMAINDER","tokenBase","stream","state","ch","tokenLiteral","eatPnLocal","word","quote","escaped","pushContext","type","col","popContext","sparql","style","textAfter","cx","firstChar","context","closing"],"mappings":"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","x_google_ignoreList":[0]}