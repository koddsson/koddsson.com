{"version":3,"file":"d-pRatUO7H.js","sources":["../node_modules/@codemirror/legacy-modes/mode/d.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar blockKeywordsStr = \"body catch class do else enum for foreach foreach_reverse if in interface mixin \" +\n    \"out scope struct switch try union unittest version while with\";\n\nconst parserConfig = {\n  keywords: words(\"abstract alias align asm assert auto break case cast cdouble cent cfloat const continue \" +\n                  \"debug default delegate delete deprecated export extern final finally function goto immutable \" +\n                  \"import inout invariant is lazy macro module new nothrow override package pragma private \" +\n                  \"protected public pure ref return shared short static super synchronized template this \" +\n                  \"throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters \" +\n                  blockKeywordsStr),\n  blockKeywords: words(blockKeywordsStr),\n  builtin: words(\"bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte \" +\n                 \"ucent uint ulong ushort wchar wstring void size_t sizediff_t\"),\n  atoms: words(\"exit failure success true false null\"),\n  hooks: {\n    \"@\": function(stream, _state) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    }\n  }\n}\n\nvar statementIndentUnit = parserConfig.statementIndentUnit,\n    keywords = parserConfig.keywords,\n    builtin = parserConfig.builtin,\n    blockKeywords = parserConfig.blockKeywords,\n    atoms = parserConfig.atoms,\n    hooks = parserConfig.hooks,\n    multiLineStrings = parserConfig.multiLineStrings;\nvar isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (hooks[ch]) {\n    var result = hooks[ch](stream, state);\n    if (result !== false) return result;\n  }\n  if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"+\")) {\n      state.tokenize = tokenNestedComment;\n      return tokenNestedComment(stream, state);\n    }\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    return \"keyword\";\n  }\n  if (builtin.propertyIsEnumerable(cur)) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    return \"builtin\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = null;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenNestedComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"+\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const d = {\n  name: \"d\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") popContext(state);\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return null;\n    var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n    if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n    var closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit || cx.unit);\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n"],"names":["words","str","obj","blockKeywordsStr","parserConfig","stream","_state","statementIndentUnit","keywords","builtin","blockKeywords","atoms","hooks","multiLineStrings","isOperatorChar","curPunc","tokenBase","state","ch","result","tokenString","tokenNestedComment","tokenComment","cur","quote","escaped","next","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","popContext","t","d","indentUnit","ctx","style","textAfter","cx","firstChar","closing"],"mappings":"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","x_google_ignoreList":[0]}