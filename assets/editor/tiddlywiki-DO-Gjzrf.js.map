{"version":3,"file":"tiddlywiki-DO-Gjzrf.js","sources":["../node_modules/@codemirror/legacy-modes/mode/tiddlywiki.js"],"sourcesContent":["// Tokenizer\nvar textwords = {};\n\nvar keywords = {\n  \"allTags\": true, \"closeAll\": true, \"list\": true,\n  \"newJournal\": true, \"newTiddler\": true,\n  \"permaview\": true, \"saveChanges\": true,\n  \"search\": true, \"slider\": true, \"tabs\": true,\n  \"tag\": true, \"tagging\": true, \"tags\": true,\n  \"tiddler\": true, \"timeline\": true,\n  \"today\": true, \"version\": true, \"option\": true,\n  \"with\": true, \"filter\": true\n};\n\nvar isSpaceName = /[\\w_\\-]/i,\n    reHR = /^\\-\\-\\-\\-+$/,                                 // <hr>\n    reWikiCommentStart = /^\\/\\*\\*\\*$/,            // /***\n    reWikiCommentStop = /^\\*\\*\\*\\/$/,             // ***/\n    reBlockQuote = /^<<<$/,\n\n    reJsCodeStart = /^\\/\\/\\{\\{\\{$/,                       // //{{{ js block start\n    reJsCodeStop = /^\\/\\/\\}\\}\\}$/,                        // //}}} js stop\n    reXmlCodeStart = /^<!--\\{\\{\\{-->$/,           // xml block start\n    reXmlCodeStop = /^<!--\\}\\}\\}-->$/,            // xml stop\n\n    reCodeBlockStart = /^\\{\\{\\{$/,                        // {{{ TW text div block start\n    reCodeBlockStop = /^\\}\\}\\}$/,                 // }}} TW text stop\n\n    reUntilCodeStop = /.*?\\}\\}\\}/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  var sol = stream.sol(), ch = stream.peek();\n\n  state.block = false;        // indicates the start of a code block.\n\n  // check start of  blocks\n  if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n    if (stream.match(reCodeBlockStart)) {\n      state.block = true;\n      return chain(stream, state, twTokenCode);\n    }\n    if (stream.match(reBlockQuote))\n      return 'quote';\n    if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop))\n      return 'comment';\n    if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop))\n      return 'comment';\n    if (stream.match(reHR))\n      return 'contentSeparator';\n  }\n\n  stream.next();\n  if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n    if (ch == \"!\") { // tw header\n      stream.skipToEnd();\n      return \"header\";\n    }\n    if (ch == \"*\") { // tw list\n      stream.eatWhile('*');\n      return \"comment\";\n    }\n    if (ch == \"#\") { // tw numbered list\n      stream.eatWhile('#');\n      return \"comment\";\n    }\n    if (ch == \";\") { // definition list, term\n      stream.eatWhile(';');\n      return \"comment\";\n    }\n    if (ch == \":\") { // definition list, description\n      stream.eatWhile(':');\n      return \"comment\";\n    }\n    if (ch == \">\") { // single line quote\n      stream.eatWhile(\">\");\n      return \"quote\";\n    }\n    if (ch == '|')\n      return 'header';\n  }\n\n  if (ch == '{' && stream.match('{{'))\n    return chain(stream, state, twTokenCode);\n\n  // rudimentary html:// file:// link matching. TW knows much more ...\n  if (/[hf]/i.test(ch) &&\n      /[ti]/i.test(stream.peek()) &&\n      stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i))\n    return \"link\";\n\n  // just a little string indicator, don't want to have the whole string covered\n  if (ch == '\"')\n    return 'string';\n\n  if (ch == '~')    // _no_ CamelCase indicator should be bold\n    return 'brace';\n\n  if (/[\\[\\]]/.test(ch) && stream.match(ch)) // check for [[..]]\n    return 'brace';\n\n  if (ch == \"@\") {    // check for space link. TODO fix @@...@@ highlighting\n    stream.eatWhile(isSpaceName);\n    return \"link\";\n  }\n\n  if (/\\d/.test(ch)) {        // numbers\n    stream.eatWhile(/\\d/);\n    return \"number\";\n  }\n\n  if (ch == \"/\") { // tw invisible comment\n    if (stream.eat(\"%\")) {\n      return chain(stream, state, twTokenComment);\n    } else if (stream.eat(\"/\")) { //\n      return chain(stream, state, twTokenEm);\n    }\n  }\n\n  if (ch == \"_\" && stream.eat(\"_\")) // tw underline\n    return chain(stream, state, twTokenUnderline);\n\n  // strikethrough and mdash handling\n  if (ch == \"-\" && stream.eat(\"-\")) {\n    // if strikethrough looks ugly, change CSS.\n    if (stream.peek() != ' ')\n      return chain(stream, state, twTokenStrike);\n    // mdash\n    if (stream.peek() == ' ')\n      return 'brace';\n  }\n\n  if (ch == \"'\" && stream.eat(\"'\")) // tw bold\n    return chain(stream, state, twTokenStrong);\n\n  if (ch == \"<\" && stream.eat(\"<\")) // tw macro\n    return chain(stream, state, twTokenMacro);\n\n  // core macro handling\n  stream.eatWhile(/[\\w\\$_]/);\n  return textwords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// tw invisible comment\nfunction twTokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"%\");\n  }\n  return \"comment\";\n}\n\n// tw strong / bold\nfunction twTokenStrong(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"'\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"'\");\n  }\n  return \"strong\";\n}\n\n// tw code\nfunction twTokenCode(stream, state) {\n  var sb = state.block;\n\n  if (sb && stream.current()) {\n    return \"comment\";\n  }\n\n  if (!sb && stream.match(reUntilCodeStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  stream.next();\n  return \"comment\";\n}\n\n// tw em / italic\nfunction twTokenEm(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"/\");\n  }\n  return \"emphasis\";\n}\n\n// tw underlined text\nfunction twTokenUnderline(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"_\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"_\");\n  }\n  return \"link\";\n}\n\n// tw strike through text looks ugly\n// change CSS if needed\nfunction twTokenStrike(stream, state) {\n  var maybeEnd = false, ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"-\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"-\");\n  }\n  return \"deleted\";\n}\n\n// macro\nfunction twTokenMacro(stream, state) {\n  if (stream.current() == '<<') {\n    return 'meta';\n  }\n\n  var ch = stream.next();\n  if (!ch) {\n    state.tokenize = tokenBase;\n    return null;\n  }\n  if (ch == \">\") {\n    if (stream.peek() == '>') {\n      stream.next();\n      state.tokenize = tokenBase;\n      return \"meta\";\n    }\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  return keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// Interface\nexport const tiddlyWiki = {\n  name: \"tiddlywiki\",\n\n  startState: function () {\n    return {tokenize: tokenBase};\n  },\n\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  }\n};\n\n"],"names":["textwords","keywords","isSpaceName","reHR","reWikiCommentStart","reWikiCommentStop","reBlockQuote","reJsCodeStart","reJsCodeStop","reXmlCodeStart","reXmlCodeStop","reCodeBlockStart","reCodeBlockStop","reUntilCodeStop","chain","stream","state","f","tokenBase","sol","ch","twTokenCode","twTokenComment","twTokenEm","twTokenUnderline","twTokenStrike","twTokenStrong","twTokenMacro","maybeEnd","sb","tiddlyWiki","style"],"mappings":"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","x_google_ignoreList":[0]}