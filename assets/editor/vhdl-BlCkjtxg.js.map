{"version":3,"file":"vhdl-BlCkjtxg.js","sources":["../node_modules/@codemirror/legacy-modes/mode/vhdl.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nvar atoms = words(\"null\"),\n    hooks = {\"`\": metaHook, \"$\": metaHook},\n    multiLineStrings = false;\n\nvar keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n                     \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n                     \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n                     \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n                     \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n                     \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n                     \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\nvar blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\nvar isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (hooks[ch]) {\n    var result = hooks[ch](stream, state);\n    if (result !== false) return result;\n  }\n  if (ch == '\"') {\n    state.tokenize = tokenString2(ch);\n    return state.tokenize(stream, state);\n  }\n  if (ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (/[\\d']/.test(ch)) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n  if (ch == \"-\") {\n    if (stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\nfunction tokenString2(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string.special\";\n  };\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\nexport const vhdl = {\n  name: \"vhdl\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"--\"}\n  }\n}\n"],"names":["words","str","obj","i","allCaps","firstCap","metaHook","stream","atoms","hooks","multiLineStrings","keywords","blockKeywords","isOperatorChar","curPunc","tokenBase","state","ch","result","tokenString2","tokenString","cur","quote","escaped","next","end","Context","indented","column","type","align","prev","pushContext","col","popContext","vhdl","indentUnit","ctx","style","textAfter","cx","firstChar","closing"],"mappings":"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","x_google_ignoreList":[0]}