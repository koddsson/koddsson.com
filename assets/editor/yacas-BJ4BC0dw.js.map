{"version":3,"file":"yacas-BJ4BC0dw.js","sources":["../node_modules/@codemirror/legacy-modes/mode/yacas.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar bodiedOps = words(\"Assert BackQuote D Defun Deriv For ForEach FromFile \" +\n                      \"FromString Function Integrate InverseTaylor Limit \" +\n                      \"LocalSymbols Macro MacroRule MacroRulePattern \" +\n                      \"NIntegrate Rule RulePattern Subst TD TExplicitSum \" +\n                      \"TSum Taylor Taylor1 Taylor2 Taylor3 ToFile \" +\n                      \"ToStdout ToString TraceRule Until While\");\n\n// patterns\nvar pFloatForm  = \"(?:(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)(?:[eE][+-]?\\\\d+)?)\";\nvar pIdentifier = \"(?:[a-zA-Z\\\\$'][a-zA-Z0-9\\\\$']*)\";\n\n// regular expressions\nvar reFloatForm    = new RegExp(pFloatForm);\nvar reIdentifier   = new RegExp(pIdentifier);\nvar rePattern      = new RegExp(pIdentifier + \"?_\" + pIdentifier);\nvar reFunctionLike = new RegExp(pIdentifier + \"\\\\s*\\\\(\");\n\nfunction tokenBase(stream, state) {\n  var ch;\n\n  // get next character\n  ch = stream.next();\n\n  // string\n  if (ch === '\"') {\n    state.tokenize = tokenString;\n    return state.tokenize(stream, state);\n  }\n\n  // comment\n  if (ch === '/') {\n    if (stream.eat('*')) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n\n  // go back one character\n  stream.backUp(1);\n\n  // update scope info\n  var m = stream.match(/^(\\w+)\\s*\\(/, false);\n  if (m !== null && bodiedOps.hasOwnProperty(m[1]))\n    state.scopes.push('bodied');\n\n  var scope = currentScope(state);\n\n  if (scope === 'bodied' && ch === '[')\n    state.scopes.pop();\n\n  if (ch === '[' || ch === '{' || ch === '(')\n    state.scopes.push(ch);\n\n  scope = currentScope(state);\n\n  if (scope === '[' && ch === ']' ||\n      scope === '{' && ch === '}' ||\n      scope === '(' && ch === ')')\n    state.scopes.pop();\n\n  if (ch === ';') {\n    while (scope === 'bodied') {\n      state.scopes.pop();\n      scope = currentScope(state);\n    }\n  }\n\n  // look for ordered rules\n  if (stream.match(/\\d+ *#/, true, false)) {\n    return 'qualifier';\n  }\n\n  // look for numbers\n  if (stream.match(reFloatForm, true, false)) {\n    return 'number';\n  }\n\n  // look for placeholders\n  if (stream.match(rePattern, true, false)) {\n    return 'variableName.special';\n  }\n\n  // match all braces separately\n  if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n    return 'bracket';\n  }\n\n  // literals looking like function calls\n  if (stream.match(reFunctionLike, true, false)) {\n    stream.backUp(1);\n    return 'variableName.function';\n  }\n\n  // all other identifiers\n  if (stream.match(reIdentifier, true, false)) {\n    return 'variable';\n  }\n\n  // operators; note that operators like @@ or /; are matched separately for each symbol.\n  if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%|#)/, true, false)) {\n    return 'operator';\n  }\n\n  // everything else is an error\n  return 'error';\n}\n\nfunction tokenString(stream, state) {\n  var next, end = false, escaped = false;\n  while ((next = stream.next()) != null) {\n    if (next === '\"' && !escaped) {\n      end = true;\n      break;\n    }\n    escaped = !escaped && next === '\\\\';\n  }\n  if (end && !escaped) {\n    state.tokenize = tokenBase;\n  }\n  return 'string';\n};\n\nfunction tokenComment(stream, state) {\n  var prev, next;\n  while((next = stream.next()) != null) {\n    if (prev === '*' && next === '/') {\n      state.tokenize = tokenBase;\n      break;\n    }\n    prev = next;\n  }\n  return 'comment';\n}\n\nfunction currentScope(state) {\n  var scope = null;\n  if (state.scopes.length > 0)\n    scope = state.scopes[state.scopes.length - 1];\n  return scope;\n}\n\nexport const yacas = {\n  name: \"yacas\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      scopes: []\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize !== tokenBase && state.tokenize !== null)\n      return null;\n\n    var delta = 0;\n    if (textAfter === ']' || textAfter === '];' ||\n        textAfter === '}' || textAfter === '};' ||\n        textAfter === ');')\n      delta = -1;\n\n    return (state.scopes.length + delta) * cx.unit;\n  },\n\n  languageData: {\n    electricInput: /[{}\\[\\]()\\;]/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n"],"names":["words","str","obj","i","bodiedOps","pFloatForm","pIdentifier","reFloatForm","reIdentifier","rePattern","reFunctionLike","tokenBase","stream","state","ch","tokenString","tokenComment","m","scope","currentScope","next","end","escaped","prev","yacas","textAfter","cx","delta"],"mappings":"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","x_google_ignoreList":[0]}