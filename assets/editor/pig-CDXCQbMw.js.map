{"version":3,"file":"pig-CDXCQbMw.js","sources":["../node_modules/@codemirror/legacy-modes/mode/pig.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\n// builtin funcs taken from trunk revision 1303237\nvar pBuiltins = \"ABS ACOS ARITY ASIN ATAN AVG BAGSIZE BINSTORAGE BLOOM BUILDBLOOM CBRT CEIL \"\n    + \"CONCAT COR COS COSH COUNT COUNT_STAR COV CONSTANTSIZE CUBEDIMENSIONS DIFF DISTINCT DOUBLEABS \"\n    + \"DOUBLEAVG DOUBLEBASE DOUBLEMAX DOUBLEMIN DOUBLEROUND DOUBLESUM EXP FLOOR FLOATABS FLOATAVG \"\n    + \"FLOATMAX FLOATMIN FLOATROUND FLOATSUM GENERICINVOKER INDEXOF INTABS INTAVG INTMAX INTMIN \"\n    + \"INTSUM INVOKEFORDOUBLE INVOKEFORFLOAT INVOKEFORINT INVOKEFORLONG INVOKEFORSTRING INVOKER \"\n    + \"ISEMPTY JSONLOADER JSONMETADATA JSONSTORAGE LAST_INDEX_OF LCFIRST LOG LOG10 LOWER LONGABS \"\n    + \"LONGAVG LONGMAX LONGMIN LONGSUM MAX MIN MAPSIZE MONITOREDUDF NONDETERMINISTIC OUTPUTSCHEMA  \"\n    + \"PIGSTORAGE PIGSTREAMING RANDOM REGEX_EXTRACT REGEX_EXTRACT_ALL REPLACE ROUND SIN SINH SIZE \"\n    + \"SQRT STRSPLIT SUBSTRING SUM STRINGCONCAT STRINGMAX STRINGMIN STRINGSIZE TAN TANH TOBAG \"\n    + \"TOKENIZE TOMAP TOP TOTUPLE TRIM TEXTLOADER TUPLESIZE UCFIRST UPPER UTF8STORAGECONVERTER \";\n\n// taken from QueryLexer.g\nvar pKeywords = \"VOID IMPORT RETURNS DEFINE LOAD FILTER FOREACH ORDER CUBE DISTINCT COGROUP \"\n    + \"JOIN CROSS UNION SPLIT INTO IF OTHERWISE ALL AS BY USING INNER OUTER ONSCHEMA PARALLEL \"\n    + \"PARTITION GROUP AND OR NOT GENERATE FLATTEN ASC DESC IS STREAM THROUGH STORE MAPREDUCE \"\n    + \"SHIP CACHE INPUT OUTPUT STDERROR STDIN STDOUT LIMIT SAMPLE LEFT RIGHT FULL EQ GT LT GTE LTE \"\n    + \"NEQ MATCHES TRUE FALSE DUMP\";\n\n// data types\nvar pTypes = \"BOOLEAN INT LONG FLOAT DOUBLE CHARARRAY BYTEARRAY BAG TUPLE MAP \";\n\nvar builtins = words(pBuiltins), keywords = words(pKeywords), types = words(pTypes)\n\nvar isOperatorChar = /[*+\\-%<>=&?:\\/!|]/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenComment(stream, state) {\n  var isEnd = false;\n  var ch;\n  while(ch = stream.next()) {\n    if(ch == \"/\" && isEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    isEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true; break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped)\n      state.tokenize = tokenBase;\n    return \"error\";\n  };\n}\n\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  // is a start of string?\n  if (ch == '\"' || ch == \"'\")\n    return chain(stream, state, tokenString(ch));\n  // is it one of the special chars\n  else if(/[\\[\\]{}\\(\\),;\\.]/.test(ch))\n    return null;\n  // is it a number?\n  else if(/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  // multi line comment or operator\n  else if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      return chain(stream, state, tokenComment);\n    }\n    else {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n  }\n  // single line comment or operator\n  else if (ch==\"-\") {\n    if(stream.eat(\"-\")){\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    else {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n  }\n  // is it an operator\n  else if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  else {\n    // get the while word\n    stream.eatWhile(/[\\w\\$_]/);\n    // is it one of the listed keywords?\n    if (keywords && keywords.propertyIsEnumerable(stream.current().toUpperCase())) {\n      //keywords can be used as variables like flatten(group), group.$0 etc..\n      if (!stream.eat(\")\") && !stream.eat(\".\"))\n        return \"keyword\";\n    }\n    // is it one of the builtin functions?\n    if (builtins && builtins.propertyIsEnumerable(stream.current().toUpperCase()))\n      return \"builtin\";\n    // is it one of the listed types?\n    if (types && types.propertyIsEnumerable(stream.current().toUpperCase()))\n      return \"type\";\n    // default is a 'variable'\n    return \"variable\";\n  }\n}\n\n// Interface\nexport const pig = {\n  name: \"pig\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    if(stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  },\n\n  languageData: {\n    autocomplete: (pBuiltins + pTypes + pKeywords).split(\" \")\n  }\n};\n"],"names":["words","str","obj","i","pBuiltins","pKeywords","pTypes","builtins","keywords","types","isOperatorChar","chain","stream","state","f","tokenComment","isEnd","ch","tokenBase","tokenString","quote","escaped","next","end","pig","style"],"mappings":"AAAA,SAASA,EAAMC,EAAK,CAElB,QADIC,EAAM,CAAA,EAAIF,EAAQC,EAAI,MAAM,GAAG,EAC1BE,EAAI,EAAGA,EAAIH,EAAM,OAAQ,EAAEG,EAAGD,EAAIF,EAAMG,CAAC,CAAC,EAAI,GACvD,OAAOD,CACT,CAGA,IAAIE,EAAY,w3BAYZC,EAAY,mXAOZC,EAAS,mEAETC,EAAWP,EAAMI,CAAS,EAAGI,EAAWR,EAAMK,CAAS,EAAGI,EAAQT,EAAMM,CAAM,EAE9EI,EAAiB,oBAErB,SAASC,EAAMC,EAAQC,EAAOC,EAAG,CAC/B,OAAAD,EAAM,SAAWC,EACVA,EAAEF,EAAQC,CAAK,CACxB,CAEA,SAASE,EAAaH,EAAQC,EAAO,CAGnC,QAFIG,EAAQ,GACRC,EACEA,EAAKL,EAAO,QAAQ,CACxB,GAAGK,GAAM,KAAOD,EAAO,CACrBH,EAAM,SAAWK,EACjB,KACD,CACDF,EAASC,GAAM,GAChB,CACD,MAAO,SACT,CAEA,SAASE,EAAYC,EAAO,CAC1B,OAAO,SAASR,EAAQC,EAAO,CAE7B,QADIQ,EAAU,GAAOC,EAAMC,EAAM,IAC1BD,EAAOV,EAAO,KAAI,IAAO,MAAM,CACpC,GAAIU,GAAQF,GAAS,CAACC,EAAS,CAC7BE,EAAM,GAAM,KACb,CACDF,EAAU,CAACA,GAAWC,GAAQ,IAC/B,CACD,OAAIC,GAAO,CAACF,KACVR,EAAM,SAAWK,GACZ,OACX,CACA,CAGA,SAASA,EAAUN,EAAQC,EAAO,CAChC,IAAII,EAAKL,EAAO,OAGhB,OAAIK,GAAM,KAAOA,GAAM,IACdN,EAAMC,EAAQC,EAAOM,EAAYF,CAAE,CAAC,EAErC,mBAAmB,KAAKA,CAAE,EACzB,KAED,KAAK,KAAKA,CAAE,GAClBL,EAAO,SAAS,QAAQ,EACjB,UAGAK,GAAM,IACTL,EAAO,IAAI,GAAG,EACTD,EAAMC,EAAQC,EAAOE,CAAY,GAGxCH,EAAO,SAASF,CAAc,EACvB,YAIFO,GAAI,IACRL,EAAO,IAAI,GAAG,GACfA,EAAO,UAAS,EACT,YAGPA,EAAO,SAASF,CAAc,EACvB,YAIFA,EAAe,KAAKO,CAAE,GAC7BL,EAAO,SAASF,CAAc,EACvB,aAIPE,EAAO,SAAS,SAAS,EAErBJ,GAAYA,EAAS,qBAAqBI,EAAO,QAAS,EAAC,YAAW,CAAE,GAEtE,CAACA,EAAO,IAAI,GAAG,GAAK,CAACA,EAAO,IAAI,GAAG,EAC9B,UAGPL,GAAYA,EAAS,qBAAqBK,EAAO,QAAO,EAAG,aAAa,EACnE,UAELH,GAASA,EAAM,qBAAqBG,EAAO,QAAO,EAAG,aAAa,EAC7D,OAEF,WAEX,CAGY,MAACY,EAAM,CACjB,KAAM,MAEN,WAAY,UAAW,CACrB,MAAO,CACL,SAAUN,EACV,YAAa,EACnB,CACG,EAED,MAAO,SAASN,EAAQC,EAAO,CAC7B,GAAGD,EAAO,WAAY,OAAO,KAC7B,IAAIa,EAAQZ,EAAM,SAASD,EAAQC,CAAK,EACxC,OAAOY,CACR,EAED,aAAc,CACZ,cAAerB,EAAYE,EAASD,GAAW,MAAM,GAAG,CACzD,CACH","x_google_ignoreList":[0]}